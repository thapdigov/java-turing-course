CREATE DATABASE INSTAGRAM;

CREATE TABLE IF NOT EXISTS USERS
(
    ID         SERIAL PRIMARY KEY,
    NAME       VARCHAR(30)                                      NOT NULL UNIQUE,
    PASSWORD   VARCHAR(30)                                      NOT NULL UNIQUE,
    GENDER     VARCHAR(6) CHECK ( GENDER IN ('MALE', 'FEMALE')) NOT NULL,
    EMAIL      VARCHAR(255)                                     NOT NULL UNIQUE CHECK ( EMAIL LIKE '%@gmail.com' ),
    CATEGORY   VARCHAR(20) DEFAULT 'HUMAN',
    BIO        VARCHAR(255),
    FOLLOWERS  INT         DEFAULT 0,
    FOLLOWING  INT         DEFAULT 0,
    POST_COUNT SMALLINT    DEFAULT 0,
    CREATED_AT TIMESTAMP   DEFAULT CURRENT_TIMESTAMP
    );
CREATE TABLE IF NOT EXISTS POSTS
(
    ID            SERIAL PRIMARY KEY,
    TITLE         VARCHAR(300),
    LOCATION      VARCHAR(50) DEFAULT 'AZERBAIJAN',
    POST_URL      VARCHAR(255) NOT NULL UNIQUE,
    LIKE_COUNT    INT         DEFAULT 0,
    COMMENT_COUNT INT         DEFAULT 0,
    SAVED_COUNT   INT         DEFAULT 0,
    SEND_COUNT    INT         DEFAULT 0,
    USER_ID       INT NOT NULL,
    CREATED_AT    TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT U_ID FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
    );
CREATE TABLE IF NOT EXISTS COMMENTS
(
    ID            SERIAL PRIMARY KEY,
    COMMENT       VARCHAR(100),
    LIKE_COUNT    INT       DEFAULT 0,
    REPLY_COMMENT VARCHAR(100),
    CREATED_AT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    POST_ID       INT          NOT NULL UNIQUE,
    CUSER_ID      INT          NOT NULL UNIQUE,
    FOREIGN KEY (POST_ID) REFERENCES POSTS (ID) ON DELETE CASCADE,
    FOREIGN KEY (CUSER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
    );
CREATE TABLE IF NOT EXISTS LIKES
(
    ID         SERIAL PRIMARY KEY,
    LPOST_ID   INT NOT NULL,
    LUSER_ID   INT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (LPOST_ID) REFERENCES POSTS (ID) ON DELETE CASCADE,
    FOREIGN KEY (LUSER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
    );
CREATE VIEW INFO AS
SELECT NAME, USERS.BIO U_TITLE, FOLLOWERS, FOLLOWING, P.TITLE P_TITLE, P.LOCATION, C.COMMENT, C.REPLY_COMMENT
FROM USERS
         INNER JOIN POSTS P on USERS.ID = P.USER_ID
         INNER JOIN COMMENTS C on P.ID = C.POST_ID
         INNER JOIN LIKES L on P.ID = L.LPOST_ID;

SELECT *
FROM INFO;